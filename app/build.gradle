def versionMajor = 1
def versionMinor = 8
def versionPatch = 0
def versionBuild = 0

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "fr.smarquis.fcm"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /* AndroidX */
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'
    implementation 'androidx.transition:transition:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    /* Material Design */
    implementation 'com.google.android.material:material:1.2.0-alpha04'

    /* Firebase */
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-database:19.2.0'

    /* Koin: Dependency Injection */
    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-android-scope:2.0.1'
    implementation 'org.koin:koin-android-viewmodel:2.0.1'
    testImplementation 'org.koin:koin-test:2.0.1'
    androidTestImplementation 'org.koin:koin-test:2.0.1'

    /* Moshi: JSON parsing */
    implementation 'com.squareup.moshi:moshi-adapters:1.9.2'
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.2'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    /* Room: SQLite persistence */
    implementation 'androidx.room:room-runtime:2.2.3'
    kapt 'androidx.room:room-compiler:2.2.3'
    implementation 'androidx.room:room-ktx:2.2.3'
    testImplementation 'androidx.room:room-testing:2.2.3'

    /* Kotlin Coroutines */
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'

    /* JUnit */
    testImplementation 'junit:junit:4.13'

}

apply plugin: 'com.google.gms.google-services'
